ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"syscalls.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.initialise_monitor_handles,"ax",%progbits
  18              		.align	1
  19              		.global	initialise_monitor_handles
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	initialise_monitor_handles:
  25              	.LFB25:
  26              		.file 1 "Core/Src/syscalls.c"
   1:Core/Src/syscalls.c **** /**
   2:Core/Src/syscalls.c **** *****************************************************************************
   3:Core/Src/syscalls.c **** **
   4:Core/Src/syscalls.c **** **  File        : syscalls.c
   5:Core/Src/syscalls.c **** **
   6:Core/Src/syscalls.c **** **  Author		: Auto-generated by System workbench for STM32
   7:Core/Src/syscalls.c **** **
   8:Core/Src/syscalls.c **** **  Abstract    : System Workbench Minimal System calls file
   9:Core/Src/syscalls.c **** **
  10:Core/Src/syscalls.c **** ** 		          For more information about which c-functions
  11:Core/Src/syscalls.c **** **                need which of these lowlevel functions
  12:Core/Src/syscalls.c **** **                please consult the Newlib libc-manual
  13:Core/Src/syscalls.c **** **
  14:Core/Src/syscalls.c **** **  Target      : STMicroelectronics STM32
  15:Core/Src/syscalls.c **** **
  16:Core/Src/syscalls.c **** **  Distribution: The file is distributed ¡°as is,¡± without any warranty
  17:Core/Src/syscalls.c **** **                of any kind.
  18:Core/Src/syscalls.c **** **
  19:Core/Src/syscalls.c **** *****************************************************************************
  20:Core/Src/syscalls.c **** ** @attention
  21:Core/Src/syscalls.c **** **
  22:Core/Src/syscalls.c **** ** <h2><center>&copy; COPYRIGHT(c) 2019 STMicroelectronics</center></h2>
  23:Core/Src/syscalls.c **** **
  24:Core/Src/syscalls.c **** ** Redistribution and use in source and binary forms, with or without modification,
  25:Core/Src/syscalls.c **** ** are permitted provided that the following conditions are met:
  26:Core/Src/syscalls.c **** **   1. Redistributions of source code must retain the above copyright notice,
  27:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer.
  28:Core/Src/syscalls.c **** **   2. Redistributions in binary form must reproduce the above copyright notice,
  29:Core/Src/syscalls.c **** **      this list of conditions and the following disclaimer in the documentation
  30:Core/Src/syscalls.c **** **      and/or other materials provided with the distribution.
  31:Core/Src/syscalls.c **** **   3. Neither the name of STMicroelectronics nor the names of its contributors
  32:Core/Src/syscalls.c **** **      may be used to endorse or promote products derived from this software
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 2


  33:Core/Src/syscalls.c **** **      without specific prior written permission.
  34:Core/Src/syscalls.c **** **
  35:Core/Src/syscalls.c **** ** THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  36:Core/Src/syscalls.c **** ** AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  37:Core/Src/syscalls.c **** ** IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  38:Core/Src/syscalls.c **** ** DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  39:Core/Src/syscalls.c **** ** FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  40:Core/Src/syscalls.c **** ** DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  41:Core/Src/syscalls.c **** ** SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  42:Core/Src/syscalls.c **** ** CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  43:Core/Src/syscalls.c **** ** OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  44:Core/Src/syscalls.c **** ** OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  45:Core/Src/syscalls.c **** **
  46:Core/Src/syscalls.c **** *****************************************************************************
  47:Core/Src/syscalls.c **** */
  48:Core/Src/syscalls.c **** 
  49:Core/Src/syscalls.c **** /* Includes */
  50:Core/Src/syscalls.c **** #include <sys/stat.h>
  51:Core/Src/syscalls.c **** #include <stdlib.h>
  52:Core/Src/syscalls.c **** #include <errno.h>
  53:Core/Src/syscalls.c **** #include <stdio.h>
  54:Core/Src/syscalls.c **** #include <signal.h>
  55:Core/Src/syscalls.c **** #include <time.h>
  56:Core/Src/syscalls.c **** #include <sys/time.h>
  57:Core/Src/syscalls.c **** #include <sys/times.h>
  58:Core/Src/syscalls.c **** 
  59:Core/Src/syscalls.c **** 
  60:Core/Src/syscalls.c **** /* Variables */
  61:Core/Src/syscalls.c **** //#undef errno
  62:Core/Src/syscalls.c **** extern int errno;
  63:Core/Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  64:Core/Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  65:Core/Src/syscalls.c **** 
  66:Core/Src/syscalls.c **** register char * stack_ptr asm("sp");
  67:Core/Src/syscalls.c **** 
  68:Core/Src/syscalls.c **** char *__env[1] = { 0 };
  69:Core/Src/syscalls.c **** char **environ = __env;
  70:Core/Src/syscalls.c **** 
  71:Core/Src/syscalls.c **** 
  72:Core/Src/syscalls.c **** /* Functions */
  73:Core/Src/syscalls.c **** void initialise_monitor_handles()
  74:Core/Src/syscalls.c **** {
  27              		.loc 1 74 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  75:Core/Src/syscalls.c **** }
  32              		.loc 1 75 1 view .LVU1
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE25:
  37              		.section	.text._getpid,"ax",%progbits
  38              		.align	1
  39              		.global	_getpid
  40              		.syntax unified
  41              		.thumb
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 3


  42              		.thumb_func
  44              	_getpid:
  45              	.LFB26:
  76:Core/Src/syscalls.c **** 
  77:Core/Src/syscalls.c **** int _getpid(void)
  78:Core/Src/syscalls.c **** {
  46              		.loc 1 78 1 view -0
  47              		.cfi_startproc
  48              		@ args = 0, pretend = 0, frame = 0
  49              		@ frame_needed = 0, uses_anonymous_args = 0
  50              		@ link register save eliminated.
  79:Core/Src/syscalls.c **** 	return 1;
  51              		.loc 1 79 2 view .LVU3
  80:Core/Src/syscalls.c **** }
  52              		.loc 1 80 1 is_stmt 0 view .LVU4
  53 0000 0120     		movs	r0, #1
  54 0002 7047     		bx	lr
  55              		.cfi_endproc
  56              	.LFE26:
  58              		.section	.text._kill,"ax",%progbits
  59              		.align	1
  60              		.global	_kill
  61              		.syntax unified
  62              		.thumb
  63              		.thumb_func
  65              	_kill:
  66              	.LVL0:
  67              	.LFB27:
  81:Core/Src/syscalls.c **** 
  82:Core/Src/syscalls.c **** int _kill(int pid, int sig)
  83:Core/Src/syscalls.c **** {
  68              		.loc 1 83 1 is_stmt 1 view -0
  69              		.cfi_startproc
  70              		@ args = 0, pretend = 0, frame = 0
  71              		@ frame_needed = 0, uses_anonymous_args = 0
  72              		.loc 1 83 1 is_stmt 0 view .LVU6
  73 0000 08B5     		push	{r3, lr}
  74              	.LCFI0:
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 3, -8
  77              		.cfi_offset 14, -4
  84:Core/Src/syscalls.c **** 	errno = EINVAL;
  78              		.loc 1 84 2 is_stmt 1 view .LVU7
  79 0002 FFF7FEFF 		bl	__errno
  80              	.LVL1:
  81              		.loc 1 84 8 is_stmt 0 view .LVU8
  82 0006 1623     		movs	r3, #22
  83 0008 0360     		str	r3, [r0]
  85:Core/Src/syscalls.c **** 	return -1;
  84              		.loc 1 85 2 is_stmt 1 view .LVU9
  86:Core/Src/syscalls.c **** }
  85              		.loc 1 86 1 is_stmt 0 view .LVU10
  86 000a 4FF0FF30 		mov	r0, #-1
  87 000e 08BD     		pop	{r3, pc}
  88              		.cfi_endproc
  89              	.LFE27:
  91              		.section	.text._exit,"ax",%progbits
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 4


  92              		.align	1
  93              		.global	_exit
  94              		.syntax unified
  95              		.thumb
  96              		.thumb_func
  98              	_exit:
  99              	.LVL2:
 100              	.LFB28:
  87:Core/Src/syscalls.c **** 
  88:Core/Src/syscalls.c **** void _exit (int status)
  89:Core/Src/syscalls.c **** {
 101              		.loc 1 89 1 is_stmt 1 view -0
 102              		.cfi_startproc
 103              		@ Volatile: function does not return.
 104              		@ args = 0, pretend = 0, frame = 0
 105              		@ frame_needed = 0, uses_anonymous_args = 0
 106              		.loc 1 89 1 is_stmt 0 view .LVU12
 107 0000 08B5     		push	{r3, lr}
 108              	.LCFI1:
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 3, -8
 111              		.cfi_offset 14, -4
  90:Core/Src/syscalls.c **** 	_kill(status, -1);
 112              		.loc 1 90 2 is_stmt 1 view .LVU13
 113 0002 4FF0FF31 		mov	r1, #-1
 114 0006 FFF7FEFF 		bl	_kill
 115              	.LVL3:
 116              	.L6:
  91:Core/Src/syscalls.c **** 	while (1) {}		/* Make sure we hang here */
 117              		.loc 1 91 2 discriminator 1 view .LVU14
 118              		.loc 1 91 13 discriminator 1 view .LVU15
 119              		.loc 1 91 8 discriminator 1 view .LVU16
 120 000a FEE7     		b	.L6
 121              		.cfi_endproc
 122              	.LFE28:
 124              		.section	.text._read,"ax",%progbits
 125              		.align	1
 126              		.weak	_read
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 131              	_read:
 132              	.LVL4:
 133              	.LFB29:
  92:Core/Src/syscalls.c **** }
  93:Core/Src/syscalls.c **** 
  94:Core/Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  95:Core/Src/syscalls.c **** {
 134              		.loc 1 95 1 view -0
 135              		.cfi_startproc
 136              		@ args = 0, pretend = 0, frame = 0
 137              		@ frame_needed = 0, uses_anonymous_args = 0
 138              		.loc 1 95 1 is_stmt 0 view .LVU18
 139 0000 70B5     		push	{r4, r5, r6, lr}
 140              	.LCFI2:
 141              		.cfi_def_cfa_offset 16
 142              		.cfi_offset 4, -16
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 5


 143              		.cfi_offset 5, -12
 144              		.cfi_offset 6, -8
 145              		.cfi_offset 14, -4
 146 0002 0C46     		mov	r4, r1
 147 0004 1646     		mov	r6, r2
  96:Core/Src/syscalls.c **** 	int DataIdx;
 148              		.loc 1 96 2 is_stmt 1 view .LVU19
  97:Core/Src/syscalls.c **** 
  98:Core/Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 149              		.loc 1 98 2 view .LVU20
 150              	.LVL5:
 151              		.loc 1 98 15 is_stmt 0 view .LVU21
 152 0006 0025     		movs	r5, #0
 153              		.loc 1 98 2 view .LVU22
 154 0008 06E0     		b	.L9
 155              	.LVL6:
 156              	.L10:
  99:Core/Src/syscalls.c **** 	{
 100:Core/Src/syscalls.c **** 		*ptr++ = __io_getchar();
 157              		.loc 1 100 3 is_stmt 1 discriminator 3 view .LVU23
 158              		.loc 1 100 12 is_stmt 0 discriminator 3 view .LVU24
 159 000a FFF7FEFF 		bl	__io_getchar
 160              	.LVL7:
 161              		.loc 1 100 7 discriminator 3 view .LVU25
 162 000e 2146     		mov	r1, r4
 163              	.LVL8:
 164              		.loc 1 100 10 discriminator 3 view .LVU26
 165 0010 01F8010B 		strb	r0, [r1], #1
 166              	.LVL9:
  98:Core/Src/syscalls.c **** 	{
 167              		.loc 1 98 35 is_stmt 1 discriminator 3 view .LVU27
  98:Core/Src/syscalls.c **** 	{
 168              		.loc 1 98 42 is_stmt 0 discriminator 3 view .LVU28
 169 0014 0135     		adds	r5, r5, #1
 170              	.LVL10:
 171              		.loc 1 100 7 discriminator 3 view .LVU29
 172 0016 0C46     		mov	r4, r1
 173              	.LVL11:
 174              	.L9:
  98:Core/Src/syscalls.c **** 	{
 175              		.loc 1 98 20 is_stmt 1 discriminator 1 view .LVU30
  98:Core/Src/syscalls.c **** 	{
 176              		.loc 1 98 2 is_stmt 0 discriminator 1 view .LVU31
 177 0018 B542     		cmp	r5, r6
 178 001a F6DB     		blt	.L10
 101:Core/Src/syscalls.c **** 	}
 102:Core/Src/syscalls.c **** 
 103:Core/Src/syscalls.c **** return len;
 179              		.loc 1 103 1 is_stmt 1 view .LVU32
 104:Core/Src/syscalls.c **** }
 180              		.loc 1 104 1 is_stmt 0 view .LVU33
 181 001c 3046     		mov	r0, r6
 182 001e 70BD     		pop	{r4, r5, r6, pc}
 183              		.loc 1 104 1 view .LVU34
 184              		.cfi_endproc
 185              	.LFE29:
 187              		.section	.text._write,"ax",%progbits
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 6


 188              		.align	1
 189              		.weak	_write
 190              		.syntax unified
 191              		.thumb
 192              		.thumb_func
 194              	_write:
 195              	.LVL12:
 196              	.LFB30:
 105:Core/Src/syscalls.c **** 
 106:Core/Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
 107:Core/Src/syscalls.c **** {
 197              		.loc 1 107 1 is_stmt 1 view -0
 198              		.cfi_startproc
 199              		@ args = 0, pretend = 0, frame = 0
 200              		@ frame_needed = 0, uses_anonymous_args = 0
 201              		.loc 1 107 1 is_stmt 0 view .LVU36
 202 0000 70B5     		push	{r4, r5, r6, lr}
 203              	.LCFI3:
 204              		.cfi_def_cfa_offset 16
 205              		.cfi_offset 4, -16
 206              		.cfi_offset 5, -12
 207              		.cfi_offset 6, -8
 208              		.cfi_offset 14, -4
 209 0002 0C46     		mov	r4, r1
 210 0004 1646     		mov	r6, r2
 108:Core/Src/syscalls.c **** 	int DataIdx;
 211              		.loc 1 108 2 is_stmt 1 view .LVU37
 109:Core/Src/syscalls.c **** 
 110:Core/Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 212              		.loc 1 110 2 view .LVU38
 213              	.LVL13:
 214              		.loc 1 110 15 is_stmt 0 view .LVU39
 215 0006 0025     		movs	r5, #0
 216              		.loc 1 110 2 view .LVU40
 217 0008 04E0     		b	.L13
 218              	.LVL14:
 219              	.L14:
 111:Core/Src/syscalls.c **** 	{
 112:Core/Src/syscalls.c **** 		__io_putchar(*ptr++);
 220              		.loc 1 112 3 is_stmt 1 discriminator 3 view .LVU41
 221              		.loc 1 112 3 is_stmt 0 discriminator 3 view .LVU42
 222 000a 14F8010B 		ldrb	r0, [r4], #1	@ zero_extendqisi2
 223              	.LVL15:
 224              		.loc 1 112 3 discriminator 3 view .LVU43
 225 000e FFF7FEFF 		bl	__io_putchar
 226              	.LVL16:
 110:Core/Src/syscalls.c **** 	{
 227              		.loc 1 110 35 is_stmt 1 discriminator 3 view .LVU44
 110:Core/Src/syscalls.c **** 	{
 228              		.loc 1 110 42 is_stmt 0 discriminator 3 view .LVU45
 229 0012 0135     		adds	r5, r5, #1
 230              	.LVL17:
 231              	.L13:
 110:Core/Src/syscalls.c **** 	{
 232              		.loc 1 110 20 is_stmt 1 discriminator 1 view .LVU46
 110:Core/Src/syscalls.c **** 	{
 233              		.loc 1 110 2 is_stmt 0 discriminator 1 view .LVU47
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 7


 234 0014 B542     		cmp	r5, r6
 235 0016 F8DB     		blt	.L14
 113:Core/Src/syscalls.c **** 	}
 114:Core/Src/syscalls.c **** 	return len;
 236              		.loc 1 114 2 is_stmt 1 view .LVU48
 115:Core/Src/syscalls.c **** }
 237              		.loc 1 115 1 is_stmt 0 view .LVU49
 238 0018 3046     		mov	r0, r6
 239 001a 70BD     		pop	{r4, r5, r6, pc}
 240              		.loc 1 115 1 view .LVU50
 241              		.cfi_endproc
 242              	.LFE30:
 244              		.section	.text._sbrk,"ax",%progbits
 245              		.align	1
 246              		.global	_sbrk
 247              		.syntax unified
 248              		.thumb
 249              		.thumb_func
 251              	_sbrk:
 252              	.LVL18:
 253              	.LFB31:
 116:Core/Src/syscalls.c **** 
 117:Core/Src/syscalls.c **** caddr_t _sbrk(int incr)
 118:Core/Src/syscalls.c **** {
 254              		.loc 1 118 1 is_stmt 1 view -0
 255              		.cfi_startproc
 256              		@ args = 0, pretend = 0, frame = 0
 257              		@ frame_needed = 0, uses_anonymous_args = 0
 258              		.loc 1 118 1 is_stmt 0 view .LVU52
 259 0000 08B5     		push	{r3, lr}
 260              	.LCFI4:
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 3, -8
 263              		.cfi_offset 14, -4
 264 0002 0346     		mov	r3, r0
 119:Core/Src/syscalls.c **** 	extern char end asm("end");
 265              		.loc 1 119 2 is_stmt 1 view .LVU53
 120:Core/Src/syscalls.c **** 	static char *heap_end;
 266              		.loc 1 120 2 view .LVU54
 121:Core/Src/syscalls.c **** 	char *prev_heap_end;
 267              		.loc 1 121 2 view .LVU55
 122:Core/Src/syscalls.c **** 
 123:Core/Src/syscalls.c **** 	if (heap_end == 0)
 268              		.loc 1 123 2 view .LVU56
 269              		.loc 1 123 15 is_stmt 0 view .LVU57
 270 0004 0B4A     		ldr	r2, .L23
 271 0006 1268     		ldr	r2, [r2]
 272              		.loc 1 123 5 view .LVU58
 273 0008 42B1     		cbz	r2, .L21
 274              	.L17:
 124:Core/Src/syscalls.c **** 		heap_end = &end;
 125:Core/Src/syscalls.c **** 
 126:Core/Src/syscalls.c **** 	prev_heap_end = heap_end;
 275              		.loc 1 126 2 is_stmt 1 view .LVU59
 276              		.loc 1 126 16 is_stmt 0 view .LVU60
 277 000a 0A4A     		ldr	r2, .L23
 278 000c 1068     		ldr	r0, [r2]
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 8


 279              	.LVL19:
 127:Core/Src/syscalls.c **** 	if (heap_end + incr > stack_ptr)
 280              		.loc 1 127 2 is_stmt 1 view .LVU61
 281              		.loc 1 127 15 is_stmt 0 view .LVU62
 282 000e 0344     		add	r3, r3, r0
 283              	.LVL20:
 284              		.loc 1 127 5 view .LVU63
 285 0010 6A46     		mov	r2, sp
 286 0012 9342     		cmp	r3, r2
 287 0014 06D8     		bhi	.L22
 128:Core/Src/syscalls.c **** 	{
 129:Core/Src/syscalls.c **** //		write(1, "Heap and stack collision\n", 25);
 130:Core/Src/syscalls.c **** //		abort();
 131:Core/Src/syscalls.c **** 		errno = ENOMEM;
 132:Core/Src/syscalls.c **** 		return (caddr_t) -1;
 133:Core/Src/syscalls.c **** 	}
 134:Core/Src/syscalls.c **** 
 135:Core/Src/syscalls.c **** 	heap_end += incr;
 288              		.loc 1 135 2 is_stmt 1 view .LVU64
 289              		.loc 1 135 11 is_stmt 0 view .LVU65
 290 0016 074A     		ldr	r2, .L23
 291 0018 1360     		str	r3, [r2]
 136:Core/Src/syscalls.c **** 
 137:Core/Src/syscalls.c **** 	return (caddr_t) prev_heap_end;
 292              		.loc 1 137 2 is_stmt 1 view .LVU66
 293              	.LVL21:
 294              	.L16:
 138:Core/Src/syscalls.c **** }
 295              		.loc 1 138 1 is_stmt 0 view .LVU67
 296 001a 08BD     		pop	{r3, pc}
 297              	.LVL22:
 298              	.L21:
 124:Core/Src/syscalls.c **** 
 299              		.loc 1 124 3 is_stmt 1 view .LVU68
 124:Core/Src/syscalls.c **** 
 300              		.loc 1 124 12 is_stmt 0 view .LVU69
 301 001c 054A     		ldr	r2, .L23
 302 001e 0649     		ldr	r1, .L23+4
 303 0020 1160     		str	r1, [r2]
 304 0022 F2E7     		b	.L17
 305              	.LVL23:
 306              	.L22:
 131:Core/Src/syscalls.c **** 		return (caddr_t) -1;
 307              		.loc 1 131 3 is_stmt 1 view .LVU70
 308 0024 FFF7FEFF 		bl	__errno
 309              	.LVL24:
 131:Core/Src/syscalls.c **** 		return (caddr_t) -1;
 310              		.loc 1 131 9 is_stmt 0 view .LVU71
 311 0028 0C23     		movs	r3, #12
 312 002a 0360     		str	r3, [r0]
 132:Core/Src/syscalls.c **** 	}
 313              		.loc 1 132 3 is_stmt 1 view .LVU72
 132:Core/Src/syscalls.c **** 	}
 314              		.loc 1 132 10 is_stmt 0 view .LVU73
 315 002c 4FF0FF30 		mov	r0, #-1
 316 0030 F3E7     		b	.L16
 317              	.L24:
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 9


 318 0032 00BF     		.align	2
 319              	.L23:
 320 0034 00000000 		.word	.LANCHOR0
 321 0038 00000000 		.word	end
 322              		.cfi_endproc
 323              	.LFE31:
 325              		.section	.text._close,"ax",%progbits
 326              		.align	1
 327              		.global	_close
 328              		.syntax unified
 329              		.thumb
 330              		.thumb_func
 332              	_close:
 333              	.LVL25:
 334              	.LFB32:
 139:Core/Src/syscalls.c **** 
 140:Core/Src/syscalls.c **** int _close(int file)
 141:Core/Src/syscalls.c **** {
 335              		.loc 1 141 1 is_stmt 1 view -0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 0, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 142:Core/Src/syscalls.c **** 	return -1;
 340              		.loc 1 142 2 view .LVU75
 143:Core/Src/syscalls.c **** }
 341              		.loc 1 143 1 is_stmt 0 view .LVU76
 342 0000 4FF0FF30 		mov	r0, #-1
 343              	.LVL26:
 344              		.loc 1 143 1 view .LVU77
 345 0004 7047     		bx	lr
 346              		.cfi_endproc
 347              	.LFE32:
 349              		.section	.text._fstat,"ax",%progbits
 350              		.align	1
 351              		.global	_fstat
 352              		.syntax unified
 353              		.thumb
 354              		.thumb_func
 356              	_fstat:
 357              	.LVL27:
 358              	.LFB33:
 144:Core/Src/syscalls.c **** 
 145:Core/Src/syscalls.c **** 
 146:Core/Src/syscalls.c **** int _fstat(int file, struct stat *st)
 147:Core/Src/syscalls.c **** {
 359              		.loc 1 147 1 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		@ link register save eliminated.
 148:Core/Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 364              		.loc 1 148 2 view .LVU79
 365              		.loc 1 148 14 is_stmt 0 view .LVU80
 366 0000 4FF40053 		mov	r3, #8192
 367 0004 4B60     		str	r3, [r1, #4]
 149:Core/Src/syscalls.c **** 	return 0;
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 10


 368              		.loc 1 149 2 is_stmt 1 view .LVU81
 150:Core/Src/syscalls.c **** }
 369              		.loc 1 150 1 is_stmt 0 view .LVU82
 370 0006 0020     		movs	r0, #0
 371              	.LVL28:
 372              		.loc 1 150 1 view .LVU83
 373 0008 7047     		bx	lr
 374              		.cfi_endproc
 375              	.LFE33:
 377              		.section	.text._isatty,"ax",%progbits
 378              		.align	1
 379              		.global	_isatty
 380              		.syntax unified
 381              		.thumb
 382              		.thumb_func
 384              	_isatty:
 385              	.LVL29:
 386              	.LFB34:
 151:Core/Src/syscalls.c **** 
 152:Core/Src/syscalls.c **** int _isatty(int file)
 153:Core/Src/syscalls.c **** {
 387              		.loc 1 153 1 is_stmt 1 view -0
 388              		.cfi_startproc
 389              		@ args = 0, pretend = 0, frame = 0
 390              		@ frame_needed = 0, uses_anonymous_args = 0
 391              		@ link register save eliminated.
 154:Core/Src/syscalls.c **** 	return 1;
 392              		.loc 1 154 2 view .LVU85
 155:Core/Src/syscalls.c **** }
 393              		.loc 1 155 1 is_stmt 0 view .LVU86
 394 0000 0120     		movs	r0, #1
 395              	.LVL30:
 396              		.loc 1 155 1 view .LVU87
 397 0002 7047     		bx	lr
 398              		.cfi_endproc
 399              	.LFE34:
 401              		.section	.text._lseek,"ax",%progbits
 402              		.align	1
 403              		.global	_lseek
 404              		.syntax unified
 405              		.thumb
 406              		.thumb_func
 408              	_lseek:
 409              	.LVL31:
 410              	.LFB35:
 156:Core/Src/syscalls.c **** 
 157:Core/Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 158:Core/Src/syscalls.c **** {
 411              		.loc 1 158 1 is_stmt 1 view -0
 412              		.cfi_startproc
 413              		@ args = 0, pretend = 0, frame = 0
 414              		@ frame_needed = 0, uses_anonymous_args = 0
 415              		@ link register save eliminated.
 159:Core/Src/syscalls.c **** 	return 0;
 416              		.loc 1 159 2 view .LVU89
 160:Core/Src/syscalls.c **** }
 417              		.loc 1 160 1 is_stmt 0 view .LVU90
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 11


 418 0000 0020     		movs	r0, #0
 419              	.LVL32:
 420              		.loc 1 160 1 view .LVU91
 421 0002 7047     		bx	lr
 422              		.cfi_endproc
 423              	.LFE35:
 425              		.section	.text._open,"ax",%progbits
 426              		.align	1
 427              		.global	_open
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 432              	_open:
 433              	.LVL33:
 434              	.LFB36:
 161:Core/Src/syscalls.c **** 
 162:Core/Src/syscalls.c **** int _open(char *path, int flags, ...)
 163:Core/Src/syscalls.c **** {
 435              		.loc 1 163 1 is_stmt 1 view -0
 436              		.cfi_startproc
 437              		@ args = 4, pretend = 12, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 1
 439              		@ link register save eliminated.
 440              		.loc 1 163 1 is_stmt 0 view .LVU93
 441 0000 0EB4     		push	{r1, r2, r3}
 442              	.LCFI5:
 443              		.cfi_def_cfa_offset 12
 444              		.cfi_offset 1, -12
 445              		.cfi_offset 2, -8
 446              		.cfi_offset 3, -4
 164:Core/Src/syscalls.c **** 	/* Pretend like we always fail */
 165:Core/Src/syscalls.c **** 	return -1;
 447              		.loc 1 165 2 is_stmt 1 view .LVU94
 166:Core/Src/syscalls.c **** }
 448              		.loc 1 166 1 is_stmt 0 view .LVU95
 449 0002 4FF0FF30 		mov	r0, #-1
 450              	.LVL34:
 451              		.loc 1 166 1 view .LVU96
 452 0006 03B0     		add	sp, sp, #12
 453              	.LCFI6:
 454              		.cfi_restore 3
 455              		.cfi_restore 2
 456              		.cfi_restore 1
 457              		.cfi_def_cfa_offset 0
 458 0008 7047     		bx	lr
 459              		.cfi_endproc
 460              	.LFE36:
 462              		.section	.text._wait,"ax",%progbits
 463              		.align	1
 464              		.global	_wait
 465              		.syntax unified
 466              		.thumb
 467              		.thumb_func
 469              	_wait:
 470              	.LVL35:
 471              	.LFB37:
 167:Core/Src/syscalls.c **** 
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 12


 168:Core/Src/syscalls.c **** int _wait(int *status)
 169:Core/Src/syscalls.c **** {
 472              		.loc 1 169 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		.loc 1 169 1 is_stmt 0 view .LVU98
 477 0000 08B5     		push	{r3, lr}
 478              	.LCFI7:
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 3, -8
 481              		.cfi_offset 14, -4
 170:Core/Src/syscalls.c **** 	errno = ECHILD;
 482              		.loc 1 170 2 is_stmt 1 view .LVU99
 483 0002 FFF7FEFF 		bl	__errno
 484              	.LVL36:
 485              		.loc 1 170 8 is_stmt 0 view .LVU100
 486 0006 0A23     		movs	r3, #10
 487 0008 0360     		str	r3, [r0]
 171:Core/Src/syscalls.c **** 	return -1;
 488              		.loc 1 171 2 is_stmt 1 view .LVU101
 172:Core/Src/syscalls.c **** }
 489              		.loc 1 172 1 is_stmt 0 view .LVU102
 490 000a 4FF0FF30 		mov	r0, #-1
 491 000e 08BD     		pop	{r3, pc}
 492              		.cfi_endproc
 493              	.LFE37:
 495              		.section	.text._unlink,"ax",%progbits
 496              		.align	1
 497              		.global	_unlink
 498              		.syntax unified
 499              		.thumb
 500              		.thumb_func
 502              	_unlink:
 503              	.LVL37:
 504              	.LFB38:
 173:Core/Src/syscalls.c **** 
 174:Core/Src/syscalls.c **** int _unlink(char *name)
 175:Core/Src/syscalls.c **** {
 505              		.loc 1 175 1 is_stmt 1 view -0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              		.loc 1 175 1 is_stmt 0 view .LVU104
 510 0000 08B5     		push	{r3, lr}
 511              	.LCFI8:
 512              		.cfi_def_cfa_offset 8
 513              		.cfi_offset 3, -8
 514              		.cfi_offset 14, -4
 176:Core/Src/syscalls.c **** 	errno = ENOENT;
 515              		.loc 1 176 2 is_stmt 1 view .LVU105
 516 0002 FFF7FEFF 		bl	__errno
 517              	.LVL38:
 518              		.loc 1 176 8 is_stmt 0 view .LVU106
 519 0006 0223     		movs	r3, #2
 520 0008 0360     		str	r3, [r0]
 177:Core/Src/syscalls.c **** 	return -1;
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 13


 521              		.loc 1 177 2 is_stmt 1 view .LVU107
 178:Core/Src/syscalls.c **** }
 522              		.loc 1 178 1 is_stmt 0 view .LVU108
 523 000a 4FF0FF30 		mov	r0, #-1
 524 000e 08BD     		pop	{r3, pc}
 525              		.cfi_endproc
 526              	.LFE38:
 528              		.section	.text._times,"ax",%progbits
 529              		.align	1
 530              		.global	_times
 531              		.syntax unified
 532              		.thumb
 533              		.thumb_func
 535              	_times:
 536              	.LVL39:
 537              	.LFB39:
 179:Core/Src/syscalls.c **** 
 180:Core/Src/syscalls.c **** int _times(struct tms *buf)
 181:Core/Src/syscalls.c **** {
 538              		.loc 1 181 1 is_stmt 1 view -0
 539              		.cfi_startproc
 540              		@ args = 0, pretend = 0, frame = 0
 541              		@ frame_needed = 0, uses_anonymous_args = 0
 542              		@ link register save eliminated.
 182:Core/Src/syscalls.c **** 	return -1;
 543              		.loc 1 182 2 view .LVU110
 183:Core/Src/syscalls.c **** }
 544              		.loc 1 183 1 is_stmt 0 view .LVU111
 545 0000 4FF0FF30 		mov	r0, #-1
 546              	.LVL40:
 547              		.loc 1 183 1 view .LVU112
 548 0004 7047     		bx	lr
 549              		.cfi_endproc
 550              	.LFE39:
 552              		.section	.text._stat,"ax",%progbits
 553              		.align	1
 554              		.global	_stat
 555              		.syntax unified
 556              		.thumb
 557              		.thumb_func
 559              	_stat:
 560              	.LVL41:
 561              	.LFB40:
 184:Core/Src/syscalls.c **** 
 185:Core/Src/syscalls.c **** int _stat(char *file, struct stat *st)
 186:Core/Src/syscalls.c **** {
 562              		.loc 1 186 1 is_stmt 1 view -0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566              		@ link register save eliminated.
 187:Core/Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 567              		.loc 1 187 2 view .LVU114
 568              		.loc 1 187 14 is_stmt 0 view .LVU115
 569 0000 4FF40053 		mov	r3, #8192
 570 0004 4B60     		str	r3, [r1, #4]
 188:Core/Src/syscalls.c **** 	return 0;
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 14


 571              		.loc 1 188 2 is_stmt 1 view .LVU116
 189:Core/Src/syscalls.c **** }
 572              		.loc 1 189 1 is_stmt 0 view .LVU117
 573 0006 0020     		movs	r0, #0
 574              	.LVL42:
 575              		.loc 1 189 1 view .LVU118
 576 0008 7047     		bx	lr
 577              		.cfi_endproc
 578              	.LFE40:
 580              		.section	.text._link,"ax",%progbits
 581              		.align	1
 582              		.global	_link
 583              		.syntax unified
 584              		.thumb
 585              		.thumb_func
 587              	_link:
 588              	.LVL43:
 589              	.LFB41:
 190:Core/Src/syscalls.c **** 
 191:Core/Src/syscalls.c **** int _link(char *old, char *new)
 192:Core/Src/syscalls.c **** {
 590              		.loc 1 192 1 is_stmt 1 view -0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 0
 593              		@ frame_needed = 0, uses_anonymous_args = 0
 594              		.loc 1 192 1 is_stmt 0 view .LVU120
 595 0000 08B5     		push	{r3, lr}
 596              	.LCFI9:
 597              		.cfi_def_cfa_offset 8
 598              		.cfi_offset 3, -8
 599              		.cfi_offset 14, -4
 193:Core/Src/syscalls.c **** 	errno = EMLINK;
 600              		.loc 1 193 2 is_stmt 1 view .LVU121
 601 0002 FFF7FEFF 		bl	__errno
 602              	.LVL44:
 603              		.loc 1 193 8 is_stmt 0 view .LVU122
 604 0006 1F23     		movs	r3, #31
 605 0008 0360     		str	r3, [r0]
 194:Core/Src/syscalls.c **** 	return -1;
 606              		.loc 1 194 2 is_stmt 1 view .LVU123
 195:Core/Src/syscalls.c **** }
 607              		.loc 1 195 1 is_stmt 0 view .LVU124
 608 000a 4FF0FF30 		mov	r0, #-1
 609 000e 08BD     		pop	{r3, pc}
 610              		.cfi_endproc
 611              	.LFE41:
 613              		.section	.text._fork,"ax",%progbits
 614              		.align	1
 615              		.global	_fork
 616              		.syntax unified
 617              		.thumb
 618              		.thumb_func
 620              	_fork:
 621              	.LFB42:
 196:Core/Src/syscalls.c **** 
 197:Core/Src/syscalls.c **** int _fork(void)
 198:Core/Src/syscalls.c **** {
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 15


 622              		.loc 1 198 1 is_stmt 1 view -0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626 0000 08B5     		push	{r3, lr}
 627              	.LCFI10:
 628              		.cfi_def_cfa_offset 8
 629              		.cfi_offset 3, -8
 630              		.cfi_offset 14, -4
 199:Core/Src/syscalls.c **** 	errno = EAGAIN;
 631              		.loc 1 199 2 view .LVU126
 632 0002 FFF7FEFF 		bl	__errno
 633              	.LVL45:
 634              		.loc 1 199 8 is_stmt 0 view .LVU127
 635 0006 0B23     		movs	r3, #11
 636 0008 0360     		str	r3, [r0]
 200:Core/Src/syscalls.c **** 	return -1;
 637              		.loc 1 200 2 is_stmt 1 view .LVU128
 201:Core/Src/syscalls.c **** }
 638              		.loc 1 201 1 is_stmt 0 view .LVU129
 639 000a 4FF0FF30 		mov	r0, #-1
 640 000e 08BD     		pop	{r3, pc}
 641              		.cfi_endproc
 642              	.LFE42:
 644              		.section	.text._execve,"ax",%progbits
 645              		.align	1
 646              		.global	_execve
 647              		.syntax unified
 648              		.thumb
 649              		.thumb_func
 651              	_execve:
 652              	.LVL46:
 653              	.LFB43:
 202:Core/Src/syscalls.c **** 
 203:Core/Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 204:Core/Src/syscalls.c **** {
 654              		.loc 1 204 1 is_stmt 1 view -0
 655              		.cfi_startproc
 656              		@ args = 0, pretend = 0, frame = 0
 657              		@ frame_needed = 0, uses_anonymous_args = 0
 658              		.loc 1 204 1 is_stmt 0 view .LVU131
 659 0000 08B5     		push	{r3, lr}
 660              	.LCFI11:
 661              		.cfi_def_cfa_offset 8
 662              		.cfi_offset 3, -8
 663              		.cfi_offset 14, -4
 205:Core/Src/syscalls.c **** 	errno = ENOMEM;
 664              		.loc 1 205 2 is_stmt 1 view .LVU132
 665 0002 FFF7FEFF 		bl	__errno
 666              	.LVL47:
 667              		.loc 1 205 8 is_stmt 0 view .LVU133
 668 0006 0C23     		movs	r3, #12
 669 0008 0360     		str	r3, [r0]
 206:Core/Src/syscalls.c **** 	return -1;
 670              		.loc 1 206 2 is_stmt 1 view .LVU134
 207:Core/Src/syscalls.c **** }
 671              		.loc 1 207 1 is_stmt 0 view .LVU135
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 16


 672 000a 4FF0FF30 		mov	r0, #-1
 673 000e 08BD     		pop	{r3, pc}
 674              		.cfi_endproc
 675              	.LFE43:
 677              		.global	environ
 678              		.global	__env
 679              		.section	.bss.__env,"aw",%nobits
 680              		.align	2
 683              	__env:
 684 0000 00000000 		.space	4
 685              		.section	.bss.heap_end.0,"aw",%nobits
 686              		.align	2
 687              		.set	.LANCHOR0,. + 0
 690              	heap_end.0:
 691 0000 00000000 		.space	4
 692              		.section	.data.environ,"aw"
 693              		.align	2
 696              	environ:
 697 0000 00000000 		.word	__env
 698              		.weak	__io_putchar
 699              		.weak	__io_getchar
 700              		.text
 701              	.Letext0:
 702              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 703              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 704              		.file 4 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 705              		.file 5 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 706              		.file 6 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 707              		.file 7 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 708              		.file 8 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 709              		.file 9 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
ARM GAS  C:\Users\21945\AppData\Local\Temp\ccN90lc6.s 			page 17


DEFINED SYMBOLS
                            *ABS*:00000000 syscalls.c
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:18     .text.initialise_monitor_handles:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:24     .text.initialise_monitor_handles:00000000 initialise_monitor_handles
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:38     .text._getpid:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:44     .text._getpid:00000000 _getpid
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:59     .text._kill:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:65     .text._kill:00000000 _kill
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:92     .text._exit:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:98     .text._exit:00000000 _exit
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:125    .text._read:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:131    .text._read:00000000 _read
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:188    .text._write:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:194    .text._write:00000000 _write
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:245    .text._sbrk:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:251    .text._sbrk:00000000 _sbrk
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:320    .text._sbrk:00000034 $d
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:326    .text._close:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:332    .text._close:00000000 _close
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:350    .text._fstat:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:356    .text._fstat:00000000 _fstat
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:378    .text._isatty:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:384    .text._isatty:00000000 _isatty
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:402    .text._lseek:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:408    .text._lseek:00000000 _lseek
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:426    .text._open:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:432    .text._open:00000000 _open
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:463    .text._wait:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:469    .text._wait:00000000 _wait
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:496    .text._unlink:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:502    .text._unlink:00000000 _unlink
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:529    .text._times:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:535    .text._times:00000000 _times
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:553    .text._stat:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:559    .text._stat:00000000 _stat
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:581    .text._link:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:587    .text._link:00000000 _link
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:614    .text._fork:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:620    .text._fork:00000000 _fork
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:645    .text._execve:00000000 $t
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:651    .text._execve:00000000 _execve
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:696    .data.environ:00000000 environ
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:683    .bss.__env:00000000 __env
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:680    .bss.__env:00000000 $d
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:686    .bss.heap_end.0:00000000 $d
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:690    .bss.heap_end.0:00000000 heap_end.0
C:\Users\21945\AppData\Local\Temp\ccN90lc6.s:693    .data.environ:00000000 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
end
